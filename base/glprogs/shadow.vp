!!ARBvp1.0

# TEMP 	R0;

# R0 = OPOS - light, assumes light.w = 0
# SUB 	R0, vertex.position, program.env[4];

# R0 -= OPOS.w * light
# MAD 	R0, R0.wwww, program.env[4], R0;

# normal transform
# DP4 	result.position.x, R0, state.matrix.mvp.row[0];
# DP4 	result.position.y, R0, state.matrix.mvp.row[1];
# DP4 	result.position.z, R0, state.matrix.mvp.row[2];
# DP4 	result.position.w, R0, state.matrix.mvp.row[3];

PARAM 	mvp[4] = { state.matrix.mvp };

TEMP 	R0, R1, R2, FARPOS;


ADD		FARPOS.xyz, vertex.position, -program.env[4];
MOV 	FARPOS.w, 0;

DP4 	R0.x, mvp[0], FARPOS;
DP4 	R0.y, mvp[1], FARPOS;
DP4 	R0.z, mvp[2], FARPOS;
DP4 	R0.w, mvp[3], FARPOS;

DP4 	R1.x, mvp[0], vertex.position;
DP4 	R1.y, mvp[1], vertex.position;
DP4 	R1.z, mvp[2], vertex.position;
DP4 	R1.w, mvp[3], vertex.position;

SLT		R2.x, 0.0, vertex.position.w;
SGE 	R2.x, 0.0, R2;

ADD 	R0, R0, -R1;
MAD 	result.position, R0, R2.x, R1;

END