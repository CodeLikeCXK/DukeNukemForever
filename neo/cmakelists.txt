cmake_minimum_required(VERSION 3.22)

project(Duke4)


# Output binaries to above directory.
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_VERBOSE_MAKEFILE ON)


# Allow addressing more memory on a 64-bit host.
add_link_options("/LARGEADDRESSAWARE")

# Project is not compatible with data execution prevention.
add_link_options("/NXCOMPAT:NO")

# Project is not compatible with safe exception handlers.
add_link_options("/SAFESEH:NO")

include_directories(external/bink;external/detour/include;external/glew;external/recast/include)
link_directories(external/bink;)

file(GLOB idLibFiles
     "idlib/*.cpp*"
     "idlib/bv/*.cpp*"
     "idlib/containers/*.cpp*"
     "idlib/geometry/*.cpp*"
     "idlib/hashing/*.cpp*"
     "idlib/math/*.cpp*"  
)

file(GLOB dnGameFiles
     "dukegame/*.cpp*"
     "dukegame/DnAI/*.cpp*"
     "dukegame/Weapons/*.cpp*"
)

file(GLOB gameBaseFiles
     "game/*.cpp*"
     "game/anim/*.cpp*"
     "game/gamesys/*.cpp*"
     "game/player/*.cpp"
     "game/physics/*.cpp"
     "game/script/*.cpp"
)

file(GLOB typeInfoGenFiles
    "typeinfo/*.cpp*"
)

file(GLOB gameTypeInfoFiles
    "gametypeinfo/*.cpp*"
)

set (toolSupportSrc 
    framework/CmdSystem.cpp
    framework/CVarSystem.cpp
    framework/File.cpp
    framework/FileSystem.cpp
    framework/Unzip.cpp
)

# idLib project
add_definitions(-D_AFXDLL -D_WINDOWS -D_CRT_SECURE_NO_DEPRECATE)
add_library(idLib STATIC ${idLibFiles})
target_precompile_headers(idLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
target_compile_definitions(idLib PRIVATE NAME=$<TARGET_FILE_NAME:idLib>)
set_target_properties(idLib PROPERTIES LINK_FLAGS "/PDB:\"idlib.pdb\"")

add_library(gameTypeInfo STATIC ${gameTypeInfoFiles})
target_compile_definitions(gameTypeInfo PRIVATE GAME_DLL=1 -D_D3XP -DCTF)
set_target_properties(gameTypeInfo PROPERTIES LINK_FLAGS "/PDB:\"gameTypeInfo.pdb\"")


# Type InfoGen Project
add_executable(typeinfogen ${typeInfoGenFiles} ${toolSupportSrc})
target_compile_definitions(typeinfogen PUBLIC -DID_TYPEINFO -D__DOOM_DLL__)
target_link_libraries(typeinfogen idLib)
target_precompile_headers(typeinfogen PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)

# Game Project 
add_library(game SHARED  ${dnGameFiles} ${gameBaseFiles} game/Game.def )
target_compile_definitions(game PRIVATE GAME_DLL=1 -D_D3XP -DCTF)
target_link_libraries(game idLib gameTypeInfo)
target_precompile_headers(game PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
set_target_properties(game PROPERTIES OUTPUT_NAME "gamex86" LINK_FLAGS "/PDB:\"gamex86.pdb\"")

add_custom_target(
    GameCustomTarget
    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/../typeinfogen.exe
    OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/__header.h
)

add_dependencies(gameTypeInfo GameCustomTarget)

# Engine Project
file(GLOB engineSourceFiles 
    "cm/*.cpp*"
    "external/detour/Source/*.cpp*"
    "external/recast/Source/*.cpp*"
    "framework/*.cpp*"
    "framework/async/*.cpp*"
    "navigation/*.cpp*"
    "openal/*.cpp*"
    "renderer/*.cpp*"
    "sound/*.cpp*"
    "sys/*.cpp*"
    "sys/win32/*.cpp*"
    "ui/*.cpp*"
)

file(GLOB toolSourceFiles
    "tools/*.cpp*"
    "tools/af/*.cpp*"
    "tools/comafx/*.cpp*"
    "tools/radiant/*.cpp*"
    "tools/common/*.cpp*"
    "tools/common/PropTree/*.cpp*"
    "tools/compilers/dmap/*.cpp*"
    "tools/compilers/navmesh/*.cpp*"
    "tools/guied/*.cpp*"
    "tools/importpipeline/*.cpp*"
    "tools/materialeditor/*.cpp*"
    "tools/particle/*.cpp*"
    "tools/pda/*.cpp*"
    "tools/script/*.cpp*"
    "tools/sound/*.cpp*"
) 

file(GLOB engineDependFiles
    "external/glew/*.c*"
    "sound/vorbissrc/*.c*"
    "sound/vorbis/*.c*"
    "sound/OggVorbis/oggsrc/*.c*"
    "sound/OggVorbis/vorbissrc/*.c*"
)

add_library(engineExternal STATIC ${engineDependFiles})
set_target_properties(engineExternal PROPERTIES LINK_FLAGS "/PDB:\"engineExternal.pdb\"")

# Engine Project
add_executable(DukeNukemForever ${engineSourceFiles} ${toolSourceFiles} ./sys/win32/rc/doom.rc)
target_compile_definitions(DukeNukemForever PUBLIC -D__DOOM_DLL__)
add_dependencies(DukeNukemForever game)
link_directories(DukeNukemForever external/bink)
target_link_libraries(DukeNukemForever idLib engineExternal opengl32.lib binkw32.lib dinput8.lib dxguid.lib winmm.lib wsock32.lib dsound.lib glu32.lib dbghelp.lib iphlpapi.lib)
target_precompile_headers(DukeNukemForever PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
set_target_properties(DukeNukemForever PROPERTIES OUTPUT_NAME "DukeNukemForever" LINK_FLAGS "/STACK:16777216,16777216 /SUBSYSTEM:WINDOWS /PDB:\"DukeNukemForever.pdb\"")